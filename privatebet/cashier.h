void bet_game_multisigaddress();
void bet_compute_m_of_n_msig_addr();
void bet_check_cashier_nodes();
void bet_check_cashiers_status();
int32_t bet_send_status(struct cashier *cashier_info, char *id);
int32_t bet_process_lock_in_tx(cJSON *argjson, struct cashier *cashier_info);
int32_t bet_cashier_process_raw_msig_tx(cJSON *argjson, struct cashier *cashier_info);
int32_t bet_process_payout_tx(cJSON *argjson, struct cashier *cashier_info);
int32_t bet_process_game_info(cJSON *argjson, struct cashier *cashier_info);
cJSON *bet_resolve_game_dispute(cJSON *game_info);
int32_t bet_process_solve(cJSON *argjson, struct cashier *cashier_info);
int32_t bet_validate_game_details(cJSON *argjson, struct cashier *cashier_info);
void bet_cashier_server_loop(void *_ptr);
void bet_cashier_status_loop(void *_ptr);
int32_t bet_submit_msig_raw_tx(cJSON *tx);
char *bet_send_message_to_notary(cJSON *argjson, char *notary_node_ip);
cJSON *bet_msg_cashier_with_response_id(cJSON *argjson, char *cashier_ip, char *method_name);
int32_t bet_msg_cashier(cJSON *argjson, char *cashier_ip);
int32_t *bet_msg_multiple_cashiers(cJSON *argjson, char **cashier_ips, int no_of_cashiers);
void bet_resolve_disputed_tx();
void bet_raise_dispute(char *tx_id);
void bet_handle_game(int argc, char **argv);
void find_bvv();
